<!DOCTYPE html>
<html>
	<head>
		<style>
		#container {
			perspective: none;
			top: 30%;
			left: 40%;
			position: absolute;
		}
		img {
			width: 300px;
			height: 300px;
			animation: rotate 3s infinite linear;
		}
		@keyframes rotate {
			0% {transform: rotateY(0deg)}
			25% {transform: rotateY(90deg)}
			50% {transform: rotateY(180deg)}
			75% {transform: rotateY(270deg)}
			100% {transform: rotateY(360deg)}
		}
		</style>
	</head>
	<body>
		<div id="container">
			<img src="window.png" alt="ames window">
		</div>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		  <style>
			  body {
				background-color:cornsilk;  
			  }
		</style>
	</head>
	<body>
		<h1>Bookmarklets</h1><br>
		<p>Drag one of the links to the bookmarks bar to add bookmarklet or copy the text to the url of a bookmark</p><hr>
		<a href="javascript:(()=%3E%7Bvar%20clickerCurrentMouseTarget%20=%20document.body;document.body.addEventListener('mouseup',%20()%20=%3E%20%7BclickerIsMouseDown%20=%20false%7D);document.body.addEventListener('mousedown',%20()%20=%3E%20%7BclickerIsMouseDown%20=%20true;%7D);document.body.addEventListener('mousemove',%20(e)%20=%3E%20%7BclickerCurrentMouseTarget%20=%20e.target%7D);setInterval(()%20=%3E%20%7Bif%20(clickerIsMouseDown)%20clickerCurrentMouseTarget.click()%7D,%200);%7D)();">Autoclicker</a><br>
		<a href="javascript:(()=%3E%7Bvar%20x%20=%20document.createElement(%22script%22);%20x.src%20=%20%22https://cdn.jsdelivr.net/gh/SnowLord7/devconsole@master/main.js%22;%20x.onload%20=%20alert(%22Loaded%20Developer%20Console!%22);%20document.head.appendChild(x);%7D)();">Developer console</a><br>
		<a href="javascript:(()=%3E%7Bif(document.body.contentEditable%20!==%20'true')%20%7B%20document.body.contentEditable%20=%20'true';%20document.designMode='on';%20void%200%20%7D%20else%20%7B%20document.body.contentEditable%20=%20'false';%20document.designMode='off';%20void%200%20%7D;%7D)();">Edit page</a><br>
		<a href="javascript:(()=%3E%7Bvar%20s=document.createElement(%22script%22);s.src=%22https://cdn.jsdelivr.net/gh/XMB5/ConsoleInject@0bb01e8f/inject.js%22,document.body.appendChild(s);%7D)();">jsconsole</a><br>
		<a href="javascript:(()=%3E%7B/*Console.js*/;var%20cjs_00;var%20cjs_01;var%20cjs_02;var%20cjs_03;var%20cjs_04=0;var%20cjs_05=0;var%20cjs_06=0;var%20cjs_07=0;var%20cjs_08=-1;var%20cjs_09=%5B%5D;function%20cjs_0A()%20%7Bif%20(cjs_04%20===%200)%20%7Bcjs_0B();%7D%20else%20if%20(cjs_04%20===%201)%20%7Bcjs_0C();%7D%7Dfunction%20cjs_0B()%20%7Bcjs_0R.style.height='75%25';cjs_13.style.height='95%25';cjs_0X.style.top='-0.5em';cjs_0X.style.transform='rotateX(180deg)';cjs_04=-1;setTimeout(function()%7Bcjs_04=1;%7D,1000);cjs_17.style.top='86.875%25';%7Dfunction%20cjs_0C()%20%7Bcjs_0R.style.height='10%25';cjs_13.style.height='75%25';cjs_0X.style.top='0.15em';cjs_0X.style.transform='rotateX(360deg)';cjs_04=-1;setTimeout(function()%7Bcjs_0X.style.transitionDuration='0s';setTimeout(function()%7Bcjs_0X.style.transform='rotateX(0deg)';setTimeout(function()%7Bcjs_0X.style.transitionDuration='1s';cjs_04=0;%7D,50);%7D,50);%7D,1000);cjs_17.style.top='21%25';%7Dfunction%20cjs_0D()%20%7Bif%20(cjs_05%20===%200)%20%7Bcjs_0Z.innerHTML='&#128275;';cjs_05=1;%7D%20else%20if%20(cjs_05%20===%201)%20%7Bcjs_0Z.innerHTML='&#128274;';cjs_05=0;%7D%7Dfunction%20cjs_0F()%20%7Bif%20(cjs_06%20===%200)%20%7Bcjs_0G();%7D%20else%20if%20(cjs_06%20===%201)%20%7Bcjs_0H();%7D%7Dfunction%20cjs_0G()%20%7Bcjs_0R.style.right='calc(-25%25%20-%204em)';cjs_17.style.right='calc(-22.5%25%20-%208em)';cjs_06=-1;setTimeout(function()%7Bcjs_06=1;%7D,1000);%7Dfunction%20cjs_0H()%20%7Bcjs_0R.style.right='0%25';cjs_17.style.right='2.5%25';cjs_06=-1;setTimeout(function()%7Bcjs_06=0;%7D,1000);%7Dfunction%20cjs_0I()%20%7Blet%20cjs_1D=cjs_13.scrollTop;let%20cjs_1E=(cjs_13.clientHeight/cjs_13.scrollHeight)*cjs_0R.clientHeight;let%20cjs_1F=cjs_13.scrollHeight;let%20cjs_1G=(cjs_1D/cjs_1F)*125;cjs_15.style.top=(cjs_1G+5)+'%25';cjs_15.style.height=((cjs_1E/cjs_1F)*100)+'%25';if%20(cjs_1G+7.5%20%3E=%20100)%20%7Bcjs_15.style.opacity='0';%7D%20else%20%7Bcjs_15.style.opacity='0.5';%7D%7Dfunction%20cjs_0J()%20%7Bif%20(cjs_05%20===%200)%20%7Bcjs_13.scrollTop=cjs_13.scrollHeight;%7D%7Dfunction%20cjs_0K(event)%20%7Bif%20(event.which%20===%2013)%20%7Bif%20(cjs_07%20===%201)%20%7Bcjs_0L();%7D%7D%20else%20if%20(event.which%20===%2038)%20%7Bif%20(cjs_07%20===%201)%20%7Bcjs_0M();%7D%7D%20else%20if%20(event.which%20===%2040)%20%7Bif%20(cjs_07%20===%201)%20%7Bcjs_0N();%7D%7D%7Dfunction%20cjs_0L()%20%7Blet%20cjs_1H=cjs_19.value;cjs_19.value='';if%20(cjs_1H.toLowerCase()%20===%20'help()')%20%7Bcjs_0O('%3Cb%3E===%20Help%20menu%20===%3C/b%3E%3Cbr%3E');cjs_0O('===%20Commands:%20===%3Cbr%3E-%20help():Presents%20this%20menu.%3Cbr%3E-%20%5BJavaScript%20code%5D:Evaluates%20the%20provided%20input%20as%20JavaScript.%3Cbr%3E');cjs_0O('===%20Controls:%20====%3Cbr%3E-%20Expand/contract%20the%20console:%20&#9660;%20in%20the%20upper-right%20hand%20corner.%3Cbr%3E-%20Enable/Disable%20automatically%20jumping%20to%20the%20newest%20line:%20&#128274;%20in%20the%20upper-right%20hand%20corner.%3Cbr%3E-%20Show/Hide%20the%20console:%20&#128065;%20on%20the%20upper-left%20hand%20corner%20of%20the%20console%20window.');%7D%20else%20if%20(cjs_1H.toLowerCase()%20===%20'')%20%7B%7D%20else%20%7Btry%20%7Beval(cjs_1H);%7D%20catch(error)%20%7Bcjs_0P(error);%7D%7Dif%20(cjs_09.length%20%3C%20256)%20%7Bcjs_09.unshift(cjs_1H);cjs_08=-1;%7D%20else%20%7Bcjs_09.pop();cjs_09.unshift(cjs_1H);cjs_08=-1;%7Dcjs_0I();cjs_0J();%7Dfunction%20cjs_0M()%20%7Bif%20(cjs_09.length%20%3E%20cjs_08%20+%201)%20%7Bcjs_08%20+=%201;cjs_19.value=cjs_09%5Bcjs_08%5D;%7D%20else%20if%20(cjs_09.length%20===%200)%20%7Bcjs_19.value='';%7D%7Dfunction%20cjs_0N()%20%7Bif%20(cjs_08%20%3E%200)%20%7Bcjs_08%20-=%201;cjs_19.value=cjs_09%5Bcjs_08%5D;%7D%20else%20%7Bcjs_08=-1;cjs_19.value='';%7D%7Dfunction%20cjs_0O(cjs_1J)%20%7Blet%20cjs_1I=document.getElementById('logContent');cjs_1I.innerHTML%20+=%20'%3Cspan%20style=%22color:#5F5C6E%22%3E-&gt;%20%3Cspan%20style=%22color:#02C39A%22%3E&lt;Console.js&gt;%3C/span%3E%20'%20+%20cjs_1J%20+%20'%3C/span%3E%3Cbr/%3E';cjs_0I();cjs_0J();%7Dfunction%20cjs_0P(cjs_1J)%20%7Blet%20cjs_1I=document.getElementById('logContent');cjs_1I.innerHTML%20+=%20'%3Cspan%20style=%22color:#5F5C6E%22%3E-&gt;%3C/span%3E%20%3Cspan%20style=%22color:#02C39A%22%3E&lt;Console.js&gt;%20%3Cspan%20style=%22color:#EF798A%22%3E&lt;Input%20Error&gt;%20'%20+%20cjs_1J%20+%20'%3C/span%3E%3C/span%3E%3Cbr/%3E';cjs_01(cjs_1J);cjs_0I();cjs_0J();%7Dcjs_0Q=document.createElement('DIV');cjs_0Q.id='log';cjs_0Q.style.cssText=%60all:%20unset;position:fixed;z-index:999255;top:-20%25;right:0;width:25%25;height:10%25;padding:2em;border-bottom-left-radius:1em;overflow:visible;background-color:#242038;color:#ffffff;font-family:%22Courier%20New%22,%20Courier,%20monospace;font-size:14px;transition:top,width,height,right;transition-duration:1s;%60;cjs_0R=document.body.appendChild(cjs_0Q);cjs_0S=document.createElement('DIV');cjs_0S.style.cssText=%60position:absolute;top:0.25em;left:2.5%25;width:50%25;height:2em;background-color:#242038;user-select:none;%60;cjs_0S.innerHTML='&#128187;Console.js%3Cspan%20style=%22font-size:0.75em;font-weight:1.25;%22%3E%5Bv1.0.0%5D%3C/span%3E';cjs_0T=cjs_0R.appendChild(cjs_0S);cjs_0U=document.createElement('DIV');cjs_0U.style.cssText=%60position:absolute;top:1.5em;left:2.5%25;width:95%25;height:0.01em;border-bottom:0.125em%20dotted%20#ffffff;%60;cjs_0V=cjs_0R.appendChild(cjs_0U);cjs_0W=document.createElement('DIV');cjs_0W.style.cssText=%60position:absolute;top:0.15em;right:0.25em;width:1.5em;height:1.5em;cursor:pointer;font-size:1.5em;text-align:center;transform:rotateX(0deg);transition:top,right,color,transform;transition-duration:1s;user-select:none;%60;cjs_0W.innerHTML='&#9660;';cjs_0W.addEventListener('click',cjs_0A);cjs_0W.addEventListener('mouseover',(function()%7Bcjs_0X.style.color='#02C39A';%7D));cjs_0W.addEventListener('mouseout',(function()%7Bcjs_0X.style.color='#ffffff';%7D));cjs_0X=cjs_0R.appendChild(cjs_0W);cjs_0Y=document.createElement('DIV');cjs_0Y.style.cssText=%60position:absolute;top:0.15em;right:4em;width:1.5em;height:1.5em;cursor:pointer;font-size:0.75em;text-align:center;transition:top,right,color;transition-duration:1s;user-select:none;%60;cjs_0Y.innerHTML='&#128274;';cjs_0Y.addEventListener('click',cjs_0D);cjs_0Z=cjs_0R.appendChild(cjs_0Y);cjs_10=document.createElement('DIV');cjs_10.style.cssText=%60position:absolute;top:0.15em;left:-2.25em;width:1.5em;height:1.5em;cursor:pointer;color:#ffffff;background-color:#242038;padding:0.25em;border-radius:99em;font-size:1em;text-align:center;transition:top,right,background-color;transition-duration:1s;user-select:none;%60;cjs_10.innerHTML='&#128065;';cjs_10.addEventListener('click',cjs_0F);cjs_10.addEventListener('mouseover',(function()%7Bcjs_11.style.backgroundColor='#02C39A';%7D));cjs_10.addEventListener('mouseout',(function()%7Bcjs_11.style.backgroundColor='#242038';%7D));cjs_11=cjs_0R.appendChild(cjs_10);cjs_12=document.createElement('DIV');cjs_12.id='logContent';cjs_12.style.cssText=%60position:absolute;top:calc(2em+5%25);left:2.5%25;width:97.5%25;height:95%25;padding-right:%20100%25;overflow-x:hidden;overflow-y:scroll;cursor:default;%60;cjs_13=cjs_0R.appendChild(cjs_12);cjs_14=document.createElement('DIV');cjs_14.style.cssText=%60position:absolute;top:0;right:2.5%25;width:1%25;min-height:1%25;height:5%25;border-radius:1em;background-color:#ffffff;opacity:0.5;%60;cjs_13.addEventListener('scroll',cjs_0I);cjs_13.addEventListener('resize',cjs_0I);cjs_15=cjs_0R.appendChild(cjs_14);cjs_0I();cjs_16=document.createElement('DIV');cjs_16.style.cssText=%60all:unset;position:fixed;z-index:999254;top:-20%25;right:calc(25%25%20/%208);width:22.5%25;height:2.5em;border-radius:1em;background-color:#5F5C6E;color:#ffffff;font-family:%22Courier%20New%22,%20Courier,%20monospace;font-size:12px;transition:top,width,height,right;transition-duration:1s;%60;cjs_17=document.body.appendChild(cjs_16);cjs_18=document.createElement('INPUT');cjs_18.style.cssText=%60position:absolute;top:15%25;left:2.5%25;width:70%25;height:60%25;border-radius:0.5em;color:#ffffff;background-color:#242038;outline:none;border:none;%60;cjs_18.placeholder='Type%20JavaScript%20here...';cjs_18.setAttribute('autocomplete','off');cjs_18.addEventListener('focus',(function()%7Bcjs_07=1%7D));cjs_18.addEventListener('blur',(function()%7Bcjs_07=0%7D));cjs_19=cjs_17.appendChild(cjs_18);cjs_1A=document.createElement('BUTTON');cjs_1A.style.cssText=%60position:absolute;top:15%25;right:2.5%25;width:20%25;height:60%25;cursor:pointer;border-radius:0.5em;color:#000000;background-color:#ffffff;transition:color,background-color;transition-duration:0.5s;outline:none;border:none;%60;cjs_1A.innerHTML='&#9755;Run';cjs_1A.addEventListener('click',cjs_0L);cjs_1A.addEventListener('mouseover',(function()%7Bcjs_1B.style.color='#ffffff';cjs_1B.style.backgroundColor='#02C39A';%7D));cjs_1A.addEventListener('mouseout',(function()%7Bcjs_1B.style.color='#000000';cjs_1B.style.backgroundColor='#ffffff';%7D));cjs_1B=cjs_17.appendChild(cjs_1A);function%20cjs_1C()%20%7Bcjs_00=console.log;cjs_01=console.error;cjs_02=console.warn;cjs_03=console.clear;var%20cjs_1I=document.getElementById('logContent');console.log=function%20(cjs_1J)%20%7Bif%20(typeof%20cjs_1J%20==%20'object')%20%7Bcjs_1I.innerHTML%20+=%20'%3Cspan%20style=%22color:#5F5C6E%22%3E-&gt;%20%3Cspan%20style=%22color:#725AC1;%22%3E&lt;Object&gt;%20'%20+%20(JSON%20&&%20JSON.stringify%20?%20JSON.stringify(cjs_1J)%20:%20cjs_1J)%20+%20'%3C/span%3E%3C/span%3E%3Cbr/%3E'%20+%20'%3Cbr%20/%3E';%7D%20else%20%7Bcjs_1I.innerHTML%20+=%20'%3Cspan%20style=%22color:#5F5C6E%22%3E-&gt;%20&lt;Log&gt;%20'%20+%20cjs_1J%20+%20'%3C/span%3E%3Cbr/%3E';%7Dcjs_00(cjs_1J);%7D;console.error=function(cjs_1J)%20%7Bcjs_1I.innerHTML%20+=%20'%3Cspan%20style=%22color:#5F5C6E%22%3E-&gt;%20%3Cspan%20style=%22color:#EF798A%22%3E&lt;Error&gt;%3C/span%3E%20%3Cspan%20style=%22color:#EF798A%22%3E'%20+%20cjs_1J%20+%20'%3C/span%3E%3C/span%3E%3Cbr/%3E';cjs_01(cjs_1J);%7D;console.warn=function(cjs_1J)%20%7Bcjs_1I.innerHTML%20+=%20'%3Cspan%20style=%22color:#5F5C6E%22%3E-&gt;%20%3Cspan%20style=%22color:#F2DC5D%22%3E&lt;Warning&gt;%20'%20+%20cjs_1J%20+%20'%3C/span%3E%3C/span%3E%3Cbr/%3E';cjs_02(cjs_1J);%7D;console.clear=function()%20%7Bcjs_1I.innerHTML='';cjs_0O('Console.js%20log%20cleared.%20(Type%20console.fullclear()%20to%20clear%20the%20inspect%20element%20log%20as%20well)');%7D;console.fullclear=function()%20%7Bcjs_03();cjs_1I.innerHTML='';cjs_0O('Inspect%20element%20log%20cleared.');cjs_0O('Console.js%20log%20cleared.');%7D;%7Dcjs_1C();document.addEventListener('keydown',cjs_0K);cjs_0O('Console.js%20started.');cjs_0O('Type%20help()%20for%20more%20info.');setTimeout(function()%7Bcjs_0R.style.top='0';cjs_17.style.top='21%25';%7D,100);/*Console.js*/;%7D)();">Other console</a><br>
		<a href="javascript:(()=%3E%7Bvar%20askedCommand%20=%20prompt(%22what%20command%22);if%20(askedCommand%20!==%20null)%20%7Blocation=%22javascript:%20(()%20=%3E%20%7B%22+askedCommand+%22%7D)();%22%7D;%7D)();">Run javascript</a><br>
		<a href="javascript:(()=%3E%7Bvar%20unblockedUrl%20=%20prompt(%22enter%20the%20url%20to%20unblock.%22);if%20(unblockedUrl%20!==%20null)%20%7Blocation%20=%20%22http://webcache.googleusercontent.com/search?q=cache:%22%20+%20escape(unblockedUrl);%7D%7D)();">Unblok website</a><br>
		<a href="javascript:(()=%3E%7Bvar%20all%20=%20document;function%20blackBackground(classType)%20%7Ball%20=%20document.getElementsByClassName(classType);for%20(let%20i%20=%200;%20i%20%3C%20all.length;%20i++)%20%7Ball%5Bi%5D.style.backgroundColor%20=%20'black';%7D;%7D;function%20whiteText(classType)%20%7Ball%20=%20document.getElementsByClassName(classType);for%20(let%20i%20=%200;%20i%20%3C%20all.length;%20i++)%20%7Ball%5Bi%5D.style.color%20=%20'white';%7D;%7D;blackBackground(%22TQYOZc%22);blackBackground(%22SZ0kZe%22);blackBackground(%22QRiHXd%22);blackBackground(%22qhnNic%20LBlAUc%20Aopndd%20TIunU%22);blackBackground(%22d4Fe0d%20LBlAUc%22);whiteText(%22K6Ovqd%22);blackBackground(%22I7OXgf%20ZEeHrd%20Inn9w%20iWO5td%22);document.body.style.color=%22white%22;document.body.style.backgroundColor=%22black%22;%7D)();">Google classroom dark mode</a><br>
		<a href="javascript:(()%20=%3E%20%7Bvar%20htmldomtooltip%20=%20document.createElement(%22div%22);%20htmldomtooltip.style%20=%20%22font-size:%20120%25;%20border-radius:%2010px;%20padding:%205px;%20background-color:%20darkslategray;%20opacity:%200.9;%20color:%20white;%20position:%20fixed;%20left:%200px;%20top:%200px;%20font-family:%20monospace;%20display:%20inline-block%22;%20document.body.appendChild(htmldomtooltip);%20var%20htmldomtooltipwindow%20=%20document.createElement(%22div%22);%20htmldomtooltipwindow.style%20=%20%22text-align:%20left;%20white-space:%20pre;%20font-size:%20120%25;%20width:%20800px;%20height:%20400px;%20border-radius:%2015px;%20padding:%2020px;%20background-color:%20darkslategray;%20opacity:%200.95;%20color:%20white;%20position:%20fixed;%20font-family:%20monospace;%20display:%20none;%20top:%2050%25;%20left:%2050%25;%20transform:%20translate(-50%25,%20-50%25);%22;%20document.body.appendChild(htmldomtooltipwindow);%20var%20htmldomtooltipwindowx%20=%20%22%3Cbutton%20onclick=%5C%22closehtmldomtooltipwindow();%5C%22%20style=%5C%22display:%20block;%20width:%2040px;%20height:%2040px;%20border-radius:%2050px;%20padding:%205px;%20background-color:%20darkslategray;%20opacity:%200.95;%20color:%20white;%20position:%20fixed;%20font-family:%20monospace;%20top:%2010px;%20right:%2010px;%5C%22%3EX%3C/button%3E%22;%20var%20mousex%20=%200;%20var%20mousey%20=%200;%20var%20htmldomabletoinspect%20=%20%22true%22;%20function%20closehtmldomtooltipwindow()%20%7B%20htmldomtooltip.style.display=%22inline-block%22;%20htmldomtooltipwindow.style.display%20=%20%22none%22;%20setTimeout(()%20=%3E%20%7B%20%20htmldomabletoinspect%20=%20%22true%22;%20%7D,%20100);%20%7D;%20document.addEventListener(%22mousemove%22,%20()%20=%3E%20%7B%20mousex%20=%20event.clientX;%20mousey%20=%20event.clientY;%20%7D);%20document.addEventListener(%22click%22,%20()%20=%3E%20%7B%20if%20(htmldomabletoinspect%20==%20%22true%22)%20%7B%20htmldomabletoinspect%20=%20%22false%22;%20htmldomtooltip.style.display=%22none%22;%20htmldomtooltipwindow.style.display%20=%20%22block%22;%20htmldomtooltipwindow.innerHTML%20=%20htmldomtooltipwindowx+%22HTML%20DOM%20node%20name:%20%22+elementMouseIsOver+%22%3Cbr%3ENode%20name:%22+elementMouseIsOver.nodeName+%22%3Cbr%3EStyle:%20%22+elementMouseIsOver.style+%22%3Cbr%3EId:%20%22+elementMouseIsOver.id+%22%3Cbr%3EClasses:%20%22+elementMouseIsOver.classList;%20%7D;%20%7D);%20var%20htmldomtooltipinterval%20=%20setInterval(function()%20%7B%20elementMouseIsOver%20=%20document.elementFromPoint(mousex,%20mousey);%20htmldomtooltip.innerHTML%20=%20elementMouseIsOver;%20htmldomtooltip.style.top%20=%20(mousey+10)%20+%20%22px%22;%20htmldomtooltip.style.left%20=%20(mousex+10)%20+%20%22px%22;%20%7D,%2010);%7D)();">HTML DOM tooltip</a><br>
		<a href="javascript:(()=%3E%7Bvar%20mousex;var%20mousey;var%20keyType;var%20xPos%20=%200;var%20yPos%20=%200;var%20zPos%20=%200;var%20xRot%20=%200;var%20yRot%20=%200;var%20zRot%20=%200;document.body.scroll=%22no%22;document.body.style.overflow=%22hidden%22;document.body.style.transitionDuration%20=%20%220s%22;document.addEventListener(%22keydown%22,%20keydown);document.addEventListener(%22keyup%22,%20keyup);function%20keydown(e)%20%7Bif%20(e.code%20==%20%22Space%22)%20%7Be.preventDefault();%7D;if%20(e.code%20==%20%22ArrowLeft%22)%20%7Be.preventDefault();%7D;if%20(e.code%20==%20%22ArrowRight%22)%20%7Be.preventDefault();%7D;if%20(e.code%20==%20%22ArrowUp%22)%20%7Be.preventDefault();%7D;if%20(e.code%20==%20%22ArrowDown%22)%20%7Be.preventDefault();%7D;keyType%20=%20e.code;%7D;function%20keyup(e)%20%7BkeyType%20=%20%22%22;%7D;var%20moveinterval%20=%20setInterval(()=%3E%7Bwindow.scrollTo(0,document.body.scrollHeight/2);if%20(keyType%20==%20%22KeyW%22)%20%7BzPos%20=%20zPos+10;%7D;if%20(keyType%20==%20%22KeyS%22)%20%7BzPos%20=%20zPos-10;%7D;if%20(keyType%20==%20%22KeyA%22)%20%7BxPos%20=%20xPos+10;%7D;if%20(keyType%20==%20%22KeyD%22)%20%7BxPos%20=%20xPos-10;%7D;if%20(keyType%20==%20%22Space%22)%20%7ByPos%20=%20yPos+10;%7D;if%20(keyType%20==%20%22ShiftLeft%22)%20%7ByPos%20=%20yPos-10;%7D;if%20(keyType%20==%20%22ArrowLeft%22)%20%7ByRot%20=%20yRot-1;%7D;if%20(keyType%20==%20%22ArrowUp%22)%20%7BxRot%20=%20xRot+1;;%7D;if%20(keyType%20==%20%22ArrowRight%22)%20%7ByRot%20=%20yRot+1;%7D;if%20(keyType%20==%20%22ArrowDown%22)%20%7BxRot%20=%20xRot-1;%7D;document.body.style.transform%20=%20%60perspective(1000px)%20rotateX($%7BxRot%7Ddeg)%20rotateY($%7ByRot%7Ddeg)%20rotateZ($%7BzRot%7Ddeg)%20translate3d($%7BxPos%7Dpx,%20$%7ByPos%7Dpx,%20$%7BzPos%7Dpx)%60;%7D,%2010);%7D)();">Move page (wasd and arrow keys)</a><br>
		<a href="javascript:(()=%3E%7Bvar%20oldtransition%20=%20document.body.style.transitionDuration;var%20oldtransform%20=%20document.body.style.transform;document.body.style.transitionDuration%20=%20%224s%22;document.body.style.transform%20=%20%22rotate(360deg)%22;setTimeout(function()%7Bdocument.body.style.transitionDuration%20=%20oldtransition;document.body.style.transform%20=%20oldtransform;%7D,4000);%7D)();">Do a barrel roll</a><br>
		<a href="javascript:(()=%3E%7Bdocument.body.style.transitionDuration=%221s%22;document.body.style.transform%20=%20%22rotateY(180deg)%22;%7D)();">Flip page</a><br>
		<a href="javascript:(function()%7Bfunction%20invert(o,t)%7Bvar%20r=o.split(%22(%22),n=r%5B1%5D.split(%22)%22)%5B0%5D.split(%22,%22);return%20n.forEach(function(o,r)%7Br%3C3&&(n%5Br%5D=%22color%22==t&&255-parseInt(o)%3C50?120:255-parseInt(o))%7D),n=n.join(%22,%22),r%5B0%5D+%22(%22+n+%22)%22%7Ddocument.querySelectorAll(%22*:not(%5BinvTouch%5D)%22).forEach(function(o)%7Bvar%20t=window.getComputedStyle(o);o.style.backgroundColor=invert(t.backgroundColor,%22back%22),o.style.color=invert(t.color,%22color%22),o.setAttribute(%22invTouch%22,%22true%22)%7D);%7D)();">Dark mode</a><br>
		<a href="javascript:(()=%3E%7Bdocument.body.style.transitionDuration%20=%20%220s%22;%20var%20mousex;%20var%20mousey;%20document.body.style.perspective%20=%20%22100px%22;%20document.addEventListener(%22mousemove%22,%20()%20=%3E%20%7B%20mousex%20=%20event.clientX;%20mousey%20=%20event.clientY;%20document.body.style.transform%20=%20%22perspective(1000px)%20rotateX(%22%20+%20((mousey-300)/-2)%20+%20%22deg)%20rotateY(%22%20+%20((mousex-660)/4)%20+%20%22deg)%22;%20%7D);%7D)();">move page with mouse</a><br>
		<hr>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<title>dont use touchscreen</title>
		<style>
			#button {
				position: absolute;
				top: 50%;
				left: 50%;
				width: 11%;
				height: 11%;
				background-color: green;
				border: 4px double red;
				font-size: 22px;
				color: red;
				user-select: none;
			}
		</style>
		<script>
			function move() {
				setTimeout(function() {
					document.getElementById("button").style.top=(Math.random()*89)+"%";
					document.getElementById("button").style.left=(Math.random()*89)+"%";
				}, 100);
			};
			function clickButton() {
				alert("HOW DOD YOU CLIKC THE BUTTON HACKER PERSON");
				var interval = setInterval(function() {
					move();
				},50);
			};
		</script>
	</head>
	<body>
		<button id="button" onmouseover="move();" onclick="clickButton()">CLICK ME</button>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			body {
				background-color: cornsilk;
			}
			#input {
				width: 100%;
				height: 300px;
			}
			button {
				width: 100%;
				height: 50px;
			}
			#ahk {
				width: 100%;
			}
		</style>
		<script>
			const combos = [
				{name: "ok", amount: 0, emojis: ["ok"]},
				{name: "sos", amount: 0, emojis: ["sos"]},
				{name: "vs", amount: 0, emojis: ["vs"]},
				{name: "ab", amount: 0, emojis: ["ab"]},
				{name: "id", amount: 0, emojis: ["id"]},
				{name: "cl", amount: 0, emojis: ["cl"]},
				{name: "wc", amount: 0, emojis: ["wc"]},
				{name: "atm", amount: 0, emojis: ["atm"]},
				{name: "cool", amount: 0, emojis: ["cool"]},
				{name: "new", amount: 0, emojis: ["new"]},
				{name: "abc", amount: 0, emojis: ["abc"]},
				{name: "free", amount: 0, emojis: ["free"]},
				{name: "ng", amount: 0, emojis: ["ng"]},
				{name: "up!", amount: 0, emojis: ["up"]},
				{name: "10", amount: 0, emojis: ["keycap_ten"]},
				{name: "!!", amount: 0, emojis: ["bangbang"]},
				{name: "!?", amount: 0, emojis: ["interrobang"]},
			];
			const letters = [
				{name: " ", amount: 0, emojis: ["black_large_square"]},
				{name: "a", amount: 0, emojis: ["regional_indicator_a","a"]},
				{name: "b", amount: 0, emojis: ["regional_indicator_b","b"]},
				{name: "c", amount: 0, emojis: ["regional_indicator_c"]},
				{name: "d", amount: 0, emojis: ["regional_indicator_d"]},
				{name: "e", amount: 0, emojis: ["regional_indicator_e"]},
				{name: "f", amount: 0, emojis: ["regional_indicator_f"]},
				{name: "g", amount: 0, emojis: ["regional_indicator_g"]},
				{name: "h", amount: 0, emojis: ["regional_indicator_h"]},
				{name: "i", amount: 0, emojis: ["regional_indicator_i","information_source"]},
				{name: "j", amount: 0, emojis: ["regional_indicator_j"]},
				{name: "k", amount: 0, emojis: ["regional_indicator_k"]},
				{name: "l", amount: 0, emojis: ["regional_indicator_l"]},
				{name: "m", amount: 0, emojis: ["regional_indicator_m"]},
				{name: "n", amount: 0, emojis: ["regional_indicator_n"]},
				{name: "o", amount: 0, emojis: ["regional_indicator_o","o2","o"]},
				{name: "p", amount: 0, emojis: ["regional_indicator_p","parking"]},
				{name: "q", amount: 0, emojis: ["regional_indicator_q"]},
				{name: "r", amount: 0, emojis: ["regional_indicator_r"]},
				{name: "s", amount: 0, emojis: ["regional_indicator_s"]},
				{name: "t", amount: 0, emojis: ["regional_indicator_t","cross"]},
				{name: "u", amount: 0, emojis: ["regional_indicator_u"]},
				{name: "v", amount: 0, emojis: ["regional_indicator_v"]},
				{name: "w", amount: 0, emojis: ["regional_indicator_w"]},
				{name: "x", amount: 0, emojis: ["regional_indicator_x"]},
				{name: "y", amount: 0, emojis: ["regional_indicator_y"]},
				{name: "z", amount: 0, emojis: ["regional_indicator_z"]},
				{name: "!", amount: 0, emojis: ["exclamation","grey_exclamation"]},
				{name: "?", amount: 0, emojis: ["question","grey_question"]},
				{name: "*", amount: 0, emojis: ["asterisk"]},
				{name: "#", amount: 0, emojis: ["hash"]},
				{name: "0", amount: 0, emojis: ["zero"]},
				{name: "1", amount: 0, emojis: ["one"]},
				{name: "2", amount: 0, emojis: ["two"]},
				{name: "3", amount: 0, emojis: ["three"]},
				{name: "4", amount: 0, emojis: ["four"]},
				{name: "5", amount: 0, emojis: ["five"]},
				{name: "6", amount: 0, emojis: ["six"]},
				{name: "7", amount: 0, emojis: ["seven"]},
				{name: "8", amount: 0, emojis: ["eight"]},
				{name: "9", amount: 0, emojis: ["nine"]}
			];
			function letterToEmoji(letter) {
				for (let thei = 0; thei < letters.length; thei++) {
					if (letters[thei].name == letter.toLowerCase()) {
						return `:${letters[thei].emojis[letters[thei].amount]}:`;
					};
				};
			};
			function generate() {
				let inputValue = document.getElementById("input").value;
				let input = inputValue.split(""); 
				let output = "";
				for (let i = 0; i < input.length; i++) {
					output = output+letterToEmoji(input[i])+"\n";
					if (letterToEmoji(input[i]) == undefined) {
						console.warn(`letter: \"${input[i]}\" is undefined`);
					} else {
						// console.log(`letter: \"${input[i]}\", emoji: \"${letterToEmoji(input[i])}\"`);
					};
				};
				document.getElementById("output").innerHTML = output;
			};
		</script>
	</head>
	<body>
		<textarea id="input"></textarea>
		<button onclick="generate();">generate emojis</button>
		<p id="output"></p>
	</body>
</html> <html>
	<head>
		<style>
		@font-face { font-family: Consolas; src: url('CONSOLA.TTF'); }
		p {
			font-family: Consolas
		}
		</style>
	</head>
	<body style="background-color:black;">
			<p id="text" style="color:#15C60D;">></p>
			<script>
function addText(what) {
document.getElementById("text").innerHTML=document.getElementById("text").innerHTML+what
};
function clearText() {
document.getElementById("text").innerHTML=">"
};
function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive
};
function decimalToBinary(decimal) {
return Number(decimal).toString(2)
};
function myLoop() {
  setTimeout(function() {
  	clearText();
	for (let o = 0; o < 50; o++) { //up amount
			for (let i = 0; i < 4; i++) { //side amount
			addText(decimalToBinary(getRandomInt(1000000000000000,9999999999999999)));
			};
			addText("\n");
	};
  myLoop();
  }, 10)
}

myLoop();
			</script>
	</body> 
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			@font-face { font-family: Consolas; src: url('CONSOLA.TTF'); }
			div {
				font-family: Consolas;
				color: #15C60D;
				white-space: pre;
			}
			body {
				background-color: black;
			}
		</style>
		<script>
				var numberOfLines = 1;
				var codeparts = [
					"bob Bob = new Bob;",
					"if (mikeNum.length >= document.body.getNumberOfStuff) {",
					"enum.docsEnabler = true;",
					"};",
					"function hackBob(val) {",
					"document.getElementById(\"index\") = atlasNumber.toString(5.3);",
					"public void onExplosion(final class_2664 explosionPacket, final CallbackInfo ci) {",
					"at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:519);",
					"at com.strobel.decompiler.ast.TypeAnalysis.inferCall(TypeAnalysis.java:2438);",
					"java.lang.IllegalStateException: Invalid BootstrapMethods attribute entry: 2 additional arguments required for method java/lang/invoke/StringConcatFactory.makeConcatWithConstants, but only 1 specified.",
					"}}}}}}}}}}}}}}}]]}}}}]]};",
					"let list = {text: mapper.nodeNumber, frustum: none};",
					"var bisectorType = \"binary\";",
					"for (let i = 0; i < 43; i++) {",
					"EncryptionDataset.forgeInformation();",
					"if (binaryBlock[0] == binaryBlock.blocks) {",
					"}]",
					"]",
					"let sets = 0;",
					"addNode();",
					"function hackerEnabler(val) {",
					"console.log(`HTMLDOM.enumDocsEnabler: ${enum.docsEnabler}, 43 bits overwritten`);"
				];
				function clearText() {
					document.getElementById("text").innerHTML="Bobdoc function: loaded;";
				};
				function getRandomInt(min, max) {
					min = Math.ceil(min);
					max = Math.floor(max)+1;
					return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive
				};
				var tabs = 0;
				var tabText = "";
				var interval = setInterval(function() {
					var nextLine = codeparts[getRandomInt(0,codeparts.length-1)];
					tabs = tabs+getRandomInt(-2,1);
					if (tabs < 0) {
						tabs = 0;
					};
					tabText = "";
					for (let i = 0; i < tabs; i++) {
						tabText = tabText+"	";
					};
					document.getElementById("text").innerHTML=document.getElementById("text").innerHTML+"<br>"+tabText+nextLine;
					numberOfLines++;
					if (numberOfLines > 50) {
						let textblock = document.getElementById("text").innerHTML;
						
						// break the textblock into an array of lines
						var lines = textblock.split('<br>');
						// remove one line, starting at the first position
						lines.splice(0,1);
						// join the array back into a single string
						var newtext = lines.join('<br>');
						
						document.getElementById("text").innerHTML = newtext;
						numberOfLines = numberOfLines-1;
					};
				}, 30);
			</script>
	</head>
	<body>
		<div id="text">bobDoc function: loaded;</div>
	</body> 
</html> <html>
	<head>
		<style>
		@font-face { font-family: Consolas; src: url('CONSOLA.TTF'); }
		p {
			font-family: Consolas
		}
		</style>
	</head>
	<body style="background-color:black;">
			<p id="text" style="color:#15C60D;">></p>
			<script>
function addText(what) {
document.getElementById("text").innerHTML=document.getElementById("text").innerHTML+what
};
function clearText() {
document.getElementById("text").innerHTML=">"
};
function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive
};
function myLoop() {
  setTimeout(function() {
  	clearText();
	for (let o = 0; o < 50; o++) { //up amount
			for (let i = 0; i < 12; i++) { //side amount
			addText(getRandomInt(1000000000000000,9999999999999999));
			};
			addText("\n");
	};
  myLoop();
  }, 10)
}

myLoop();
			</script>
	</body> 
</html> <html>
	<head>
		<style>
		@font-face { font-family: Consolas; src: url('CONSOLA.TTF'); }
		p {
			font-family: Consolas
		}
		</style>
	</head>
	<body style="background-color:black;">
			<p id="text" style="color:#15C60D;" contenteditable="true">></p>
			<script>document.designMode='on'</script>
	</body> 
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			input {
				width: 100%;
			}
			button {
				padding: 50px 100px; 
				border-radius:5000px;
				font-size: 50px;
				color: white;
				background-color: green;
			}
			button:hover {
				box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
				background-color: darkgreen;
				color: white;
			}
		</style>
		<script>
				function download(filename, text) {
				var element = document.createElement('a');
				element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
				element.setAttribute('download', filename);
				
				element.style.display = 'none';
				document.body.appendChild(element);

				element.click();
				
				document.body.removeChild(element);
			};
			function downloadfile() {
				download(document.getElementById("filenameinput").value,document.getElementById("input").value)
			};
		</script>
	</head>
	<body style="background-color:cornsilk">
		<h1>File downloader</h1><hr>
		<label for="filenameinput">file name:</label>
		<input type="text" id="filenameinput" placeholder="type name">
		<p>type contents</p>
		<textarea id="input" placeholder="type here" rows="50" cols="150"></textarea><br>
		<button onclick="downloadfile();">Download</button>
	</body>
</html> 
<!DOCTYPE html>
<html>
	<head>
		<title>HTML viewer</title>
		<style>
			#nonfullscreen {
				display: block;
			}
			body {
				background-color:cornsilk;
				padding: 0px;
			}
			.border {
				background-color: darkgray;
				text-align: center;
				user-select: none;
				font-size: 32px;
				display: block;
				border: none;
				float: left;
			}
			.border:hover {
				background-color: gray;
			}
			iframe {
				border: none;
				display: block;
				margin: 0px;
				padding: 0px;
				outline: none;
			}
			textarea {
				resize: vertical;
				border: none;
				white-space: pre;
				width: 90%;
			}
			.exitfull {
				position: fixed;
				opacity: 0.3;
				border: 1px solid black;
				background-color: darkgray;
				top: 0;
				left: 0;
				width: 92px;
				height: 20px;
				padding: 0px;
				border-bottom-right-radius: 10px;
			}
			.exitfull:hover {
				position: fixed;
				opacity: 0.8;
				border: 1px solid black;
				background-color: gray;
				top: 0;
				left: 0;
				width: 92px;
				height: 20px;
				padding: 0px;
				border-bottom-right-radius: 10px;
			}
			#title {
				background-color: lightgray;
				border: 3px inset gray;
				width: 100%;
				display: block;
			}
		</style>
		<script>
			function save() {
				localStorage.setItem('HTMLSAVE', document.getElementById("input").value);
			};
			window.onload = function() {
				document.getElementById("input").value = localStorage.getItem('HTMLSAVE');
			};
			function download(filename, text) {
				var element = document.createElement('a');
				element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
				element.setAttribute('download', filename);
				
				element.style.display = 'none';
				document.body.appendChild(element);

				element.click();
				
				document.body.removeChild(element);
			};
			function downloadHTML() {
				download("index.html",document.getElementById("input").value);
			};
			window.onbeforeunload = function() {
				if (document.getElementById("input").value !== localStorage.getItem('HTMLSAVE')) {
					return 'Are you sure you want to leave?';
				};
			};
			function updateAsHTML() {
				document.getElementById("title").innerHTML = "Title: ";
				document.getElementById("embed").srcdoc=document.getElementById("input").value;
				setTimeout(() => {
					document.getElementById("title").innerHTML = "Title: "+document.getElementById("embed").contentWindow.document.getElementsByTagName("title")[0].innerHTML;
				}, 100);
				
			};
			var fullscreen = false;
			function toggleFullScreen() {
				if (fullscreen == true) {
					fullscreen = false;
					document.getElementById("nonfullscreen").style.display="block";
					document.getElementsByClassName("exitfull")[0].style.display="none";
				} else {
					fullscreen = true;
					document.getElementById("nonfullscreen").style.display="none";
					document.getElementsByClassName("exitfull")[0].style.display="block";
				};
			};
			var darkModeOn = false;
			function darkMode() {
				if (darkModeOn == true) {
					darkModeOn = false;
					document.getElementById("input").style.backgroundColor="white";
					document.getElementById("input").style.color="black";
					document.getElementById("jsinput").style.backgroundColor="white";
					document.getElementById("jsinput").style.color="black";
					document.body.style="background-color: cornsilk; color: black";
				} else {
					darkModeOn = true;
					document.getElementById("input").style.backgroundColor="darkslategray";
					document.getElementById("input").style.color="white";
					document.getElementById("jsinput").style.backgroundColor="darkslategray";
					document.getElementById("jsinput").style.color="white";
					document.body.style="background-color: #000723; color: white";
				};
			};
			function unloadHTML() {
				document.getElementById("embed").srcdoc="";
				document.getElementById("title").innerHTML = "Title: ";
			};
			function iFrameJavascript() {
				alert("bob");
			};
			function runJavascript() {
				var x = document.getElementById('embed').contentWindow.createElement("script");
				x.innerHTML = "function thisFunctionIsMegaLongSoItDoesntInterfereWithThePageAndItIsAFunctionBobTomFredMike() {"+document.getElementById("jsinput").value+"};";
				document.getElementById('embed').contentWindow.thisFunctionIsMegaLongSoItDoesntInterfereWithThePageAndItIsAFunctionBobTomFredMike();
				x.remove();
			};
		</script>
	</head>
	<body>
		<div id="nonfullscreen">
			<h1>HTML viewer</h1><br>
			<hr>
			<label>Settings:</label>
			<input id="darkmode" type="checkbox" onclick="darkMode();">Dark mode |</input>
			<button onclick="save(); alert('HTML input saved to local storage.');">Save</button>
			<hr>
			<textarea style="background-color:white;color:black;height:350px;" placeholder="Type HTML" id="input" spellcheck="false" onkeydown="if(event.keyCode===9){var v=this.value,s=this.selectionStart,e=this.selectionEnd;this.value=v.substring(0, s)+'\t'+v.substring(e);this.selectionStart=this.selectionEnd=s+1;return false;}"></textarea><br>
			<textarea style="background-color:white;color:black;height:100px;display: none;" placeholder="Type javascript" id="jsinput" spellcheck="false" onkeydown="if(event.keyCode===9){var v=this.value,s=this.selectionStart,e=this.selectionEnd;this.value=v.substring(0, s)+'\t'+v.substring(e);this.selectionStart=this.selectionEnd=s+1;return false;}"></textarea>
			<button class="border" style="width:100%;" onclick="updateAsHTML();"><strong>Update HTML</strong></button><br><br>
			<div id="title">Title: </div>
			<button class="border" style="width:33.333%;" onclick="downloadHTML();"><strong>Download</strong></button>
			<button class="border" style="width:33.333%;" onclick="unloadHTML();"><strong>Unload HTML</strong></button>
			<button class="border" style="width:25%; display: none;" onclick="runJavascript();"><strong>Run javascript</strong></button>
			<button class="border" style="width:33.333%;" onclick="toggleFullScreen();"><strong>Fullscreen</strong></button><br>
		</div>
	</body>
	<div style="background-color:white">
			<button style="display: none;" class="exitfull" onclick="toggleFullScreen()">Exit fullscreen</button>
			<iframe id="embed" srcdoc="<p>type in text box and press update html</p>" width="100%" height="617"></iframe>
	</div>
</html> <!DOCTYPE html>
<html>
	<head>
		<script>
			var squareLeft = 0;
			var squareRight = 0;
			var curlyLeft = 0;
			var curlyRight = 0;
			var parenthesesLeft = 0;
			var parenthesesRight = 0;
			var text = "";
			function clickButton() {
				squareLeft = 0;
				squareRight = 0;
				curlyLeft = 0;
				curlyRight = 0;
				parenthesesLeft = 0;
				parenthesesRight = 0;
				text = document.getElementById("javascript").value;
				
				for (let i = 0;i < text.length;i++) {
					if (text.charAt(i)=="[") {
						squareLeft++;
					} else if (text.charAt(i)=="]") {
						squareRight++;
					} else if (text.charAt(i)=="{") {
						curlyLeft++;
					} else if (text.charAt(i)=="}") {
						curlyRight++;
					} else if (text.charAt(i)=="(") {
						parenthesesLeft++;
					} else if (text.charAt(i)==")") {
						parenthesesRight++;
					};
				};
				document.getElementById("mike").innerHTML=`[: ${squareLeft}<br>]: ${squareRight}<br>{: ${curlyLeft}<br>}: ${curlyRight}<br>(:${parenthesesLeft}<br>): ${parenthesesRight}`;
			};
		</script>
	</head>
	<body style="background-color:cornsilk">
		<h1>Type javascript and click the button</h1><hr>
		<textarea id="javascript" rows="30" cols="130">type</textarea><br>
		<label>click the button to see how many of each bracket things there are</label>
		<button type="button" onclick="clickButton();">the button</button>
		<p id="mike">the results will be here</p>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			body {
				background-color: cornsilk;
			}
			textarea {
				display: inline-block;
				width: 100%;
				height: 500px;
			}
		</style>
		<script>
			function clickbutton() {
				let inputText = document.getElementById("input").value;
				for (let i = 0; i < inputText.length; i++) {
					document.getElementById("output").value = inputText.replace('bob','tom');
				};
			};
		</script>
	</head>
	<body>
		<h1>Javascript to bookmarklet</h1>
		<hr>
		<textarea style="white-space: pre;" id="input" placeholder="type javascript but you cant do comments"></textarea>
		<button onclick="clickbutton();">click to convert</button>
		<textarea id="output" readonly></textarea>
	</body>
</html> 
<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8"/>
		<link rel="shortcut icon" href="//assets-cdn.kahoot.it/controller/v2/favicon.ico"/>
		<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1"/>
		<meta name="apple-mobile-web-app-capable" content="yes"/>
		<meta name="apple-itunes-app" content="app-id=1131203560"/>
		<meta name="theme-color" content="#000000"/>
		<meta name="google" content="notranslate"/>
		<meta name="description" content="Join a game of kahoot here. Kahoot! is a free game-based learning platform that makes it fun to learn – any subject, in any language, on any device, for all ages!"/>
		<meta name="keywords" content="education, platform, smart phone, tablet, mobile, social, inclusive, HTML5, classroom, engagement, play, game, fun, quiz, multi-player, pedagogy, learning model, learn, gamification."/>
		<link rel="preconnect" href="https://fonts.googleapis.com"/>
		<link rel="preconnect" href="https://cdn.amplitude.com"/>
		<title>Play Kahoot! - Enter game PIN here!</title>
		<script>
			function sendGameStats() {}!function(e,t){var n=e.amplitude||{_q:[],_iq:{}},i=t.createElement("script");i.type="text/javascript",i.integrity="sha384-a+mq7tiLwde/00Oc7avFHLn/ttGfdAq1rtZc7u97SEzIiyYoT2IsOKWCkAThwdEu",i.crossOrigin="anonymous",i.async=!0,i.src="https://cdn.amplitude.com/libs/amplitude-5.3.0-min.gz.js",i.onload=function(){e.amplitude.runQueuedFunctions||console.log("[Amplitude] Error: could not load SDK")};var r=t.getElementsByTagName("script")[0];function s(e,t){e.prototype[t]=function(){return this._q.push([t].concat(Array.prototype.slice.call(arguments,0))),this}}r.parentNode.insertBefore(i,r);for(var o=function(){return this._q=[],this},a=["add","append","clearAll","prepend","set","setOnce","unset"],u=0;u<a.length;u++)s(o,a[u]);n.Identify=o;for(var c=function(){return this._q=[],this},l=["setProductId","setQuantity","setPrice","setRevenueType","setEventProperties"],p=0;p<l.length;p++)s(c,l[p]);n.Revenue=c;var d=["init","logEvent","logRevenue","setUserId","setUserProperties","setOptOut","setVersionName","setDomain","setDeviceId","setGlobalUserProperties","identify","clearUserProperties","setGroup","logRevenueV2","regenerateDeviceId","groupIdentify","onInit","logEventWithTimestamp","logEventWithGroups","setSessionId","resetSessionId"];function f(e){function t(t){e[t]=function(){e._q.push([t].concat(Array.prototype.slice.call(arguments,0)))}}for(var n=0;n<d.length;n++)t(d[n])}f(n),n.getInstance=function(e){return e=(e&&0!==e.length?e:"$default_instance").toLowerCase(),n._iq.hasOwnProperty(e)||(n._iq[e]={_q:[]},f(n._iq[e])),n._iq[e]},e.amplitude=n}(window,document)
		</script>
		<link rel="icon" href="//assets-cdn.kahoot.it/controller/v2/favicon.ico">
	</head>
	<body>
		<noscript>You need to enable JavaScript to run this app.</noscript>
		<div id="root"></div>
		<script src="//assets-cdn.kahoot.it/controller/v2/assets/js/runtime-main.fb5c668a.js"></script>
		<script src="//assets-cdn.kahoot.it/controller/v2/assets/js/vendors~main.e66fd8a7.chunk.js"></script>
		<script src="//assets-cdn.kahoot.it/controller/v2/assets/js/main.bf0f4ca9.chunk.js">
		</script>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<title>Mining simulator</title>
		<link rel="icon" type="image/x-icon" href="img/favicon.png">
		<style>
			#opcButton {
				width: 100%;
				height: 50px;
				display: block;
				float: left;
			}
			button {
				border: 3px outset gold;
				background-color: orange;
			}
			button:hover {
				border: 3px inset orange;
				cursor: pointer;
				background-color: darkorange;
			}
			.container {
				background-color: lightgray;
				position: absolute;
				border: 10px double gray;
			}
			#machines {
				width: 25%;
				height: 79%;
				bottom: 0px;
				right: 0px;
			}
			body {
				text-align: center;
				background-image: url("img/background.png");
				overflow: hidden;
				user-drag: none;
				-webkit-user-drag: none;
				user-select: none;
				-moz-user-select: none;
				-webkit-user-select: none;
				-ms-user-select: none;
			}
			#miner {
				width: 100%;
				height: 300px;
				cursor: pointer;
				border: 3px solid gold;
				float: top;
				display: block;
				transition-duration: 0.1s;
				background-image: url("img/miner.png");
				background-size: 100%;
			}
			#miner:active {
				transform: scale(0.98,0.98)
			}
			#oreAnimation {
				display: none;
				position: absolute;
				left: 50%;
				top: 50%;
				color: cyan;
				user-select: none;
				font-family: arial;
				font-size: 20px;
				pointer-events: none
			}
			.gold {
				color: black;
				font-size: 30px;
				font-family: monospace;
				font-weight: bold;
				background-color: yellow;
				border: 10px double gold;
			}
			#ore {
				width: 100%;
			}
			#money {
				width: 45%;
				bottom: 0px;
				left: 27%;
				position: absolute;
			}
			.machine {
				width: 100%;
				height: 15%;
				background-color: darkgray;
				border: 2px solid darkslategray;
				text-align: left;
				line-height: 70%;
				transition-duration: 0.4s;
			}
			.machine:hover {
				transform: translate(-5px, 0px);
			}
			.machineImage {
				width: 25%;
				height: 100%;
				display: inline-block;
				float: left;
			}
			#oreUpgrader {
				width: 25%;
				height: 100px;
				line-height: 70%;
				bottom: 0px;
				left: 0px;
			}
			#oreUpgraderIcon {
				width: 25%;
				height: 100%;
				float: left;
			}
			#oreUpgraderButton {
				width: 75%;
				height: 50%;
				font-size: 16px;
			}
			#oreUpgraderTitle {
				width: 75%;
				height: 50%;
			}
			#minerContainer {
				width: 306px;
				height: 405px;
				position: absolute;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -45%);
				display: block;
			}
			#cashInButton {
				width: 100%;
				height: 50px;
			}
		</style>
		<script>
			document.addEventListener("contextmenu", event => event.preventDefault());
			var tempGame = {
					machines: {
						drill: {name: "Drill", cost: 300, level: 0, ops: 0},
						digger: {name: "Digger", cost: 5000, level: 0, ops: 0},
						mineshaft: {name: "Mineshaft", cost: 50000, level: 0, ops: 0},
						dynamite: {name: "Dynamite", cost: 150000, level: 0, ops: 0}
					},
					ore: 0,
					money: 0,
					ops: 0,
					opc: 1,
					upgradeOpcCost: 100,
					oreValue: 1,
					oreLevel: 1,
					upgradeOreCost: 1000000
			};
			var Game = {
				...tempGame,
				...JSON.parse(localStorage.getItem("save"))
			};
			function save() {
				localStorage.setItem("save", JSON.stringify(Game));
			};
			function wipeSave() {
				if (confirm("do u want to wipe your save") == true) {
					Game = {...tempGame};
					save();
				};
			};
			window.onbeforeunload = function(){
				save();
			};
			function gameAlert(whatToAlert) {
				
			};
			function toCost(number) {
				return "(cost: $"+commas(number)+")";
			}
			function mine() {
				Game.ore = Game.ore+Game.opc;
				document.getElementById("oreAnimation").innerHTML = "+"+Game.opc;
				document.getElementById("oreAnimation").style.display = "block";
				setTimeout(function() {
					document.getElementById("oreAnimation").style.display = "none";
				}, 100);
			};
			function upgradeOpc() {
				if (Game.money >= Game.upgradeOpcCost) {
					Game.money = Game.money-Game.upgradeOpcCost;
					Game.opc = Game.opc*2;
					Game.upgradeOpcCost = Game.upgradeOpcCost*5;
					document.getElementById("opcButton").innerHTML = "double ore per click (cost: "+Math.ceil(Game.upgradeOpcCost)+")";
					document.getElementById("opcButton").title = "current ore per click: "+Game.opc;
				};
			};
			function levelUpDrill() {
				if (Game.money >= Game.machines.drill.cost) {
					Game.money = Game.money-Game.machines.drill.cost;
					Game.machines.drill.level++;
					Game.machines.drill.ops = Game.machines.drill.ops + 5;
					Game.ops = Game.ops + 5;
					Game.machines.drill.cost = Game.machines.drill.cost*1.5;
					document.getElementById("drillLevel").innerHTML = `Drill level: ${Game.machines.drill.level}`;
					document.getElementById("drillOps").innerHTML = `Drill ore per second: ${Game.machines.drill.ops}`;
					document.getElementById("drillButton").innerHTML = `Upgrade drill ${cost(Math.ceil(Game.machines.drill.cost))}`;
				};
			};
			function levelUpDigger() {
				if (Game.money >= Game.machines.digger.cost) {
					Game.money = Game.money-Game.machines.digger.cost;
					Game.machines.digger.level++;
					Game.machines.digger.ops = Game.machines.digger.ops + 50;
					Game.ops = Game.ops + 50;
					Game.machines.digger.cost = Game.machines.digger.cost*1.5;
					document.getElementById("diggerLevel").innerHTML = `Digger level: ${Game.machines.digger.level}`;
					document.getElementById("diggerOps").innerHTML = `Digger ore per second: ${Game.machines.digger.ops}`;
					document.getElementById("diggerButton").innerHTML = `Upgrade digger ${cost(Math.ceil(Game.machines.digger.cost))}`;
				};
			};
			function levelUpMineshaft() {
				if (Game.money >= Game.machines.mineshaft.cost) {
					Game.money = Game.money-Game.machines.mineshaft.cost;
					Game.machines.mineshaft.level++;
					Game.machines.mineshaft.ops = Game.machines.mineshaft.ops + 300;
					Game.ops = Game.ops + 300;
					Game.machines.mineshaft.cost = Game.machines.mineshaft.cost*1.5;
					document.getElementById("mineshaftLevel").innerHTML = `Mineshaft level: ${Game.machines.mineshaft.level}`;
					document.getElementById("mineshaftOps").innerHTML = `Mineshaft ore per second: ${Game.machines.mineshaft.ops}`;
					document.getElementById("mineshaftButton").innerHTML = `Upgrade mineshaft ${cost(Math.ceil(Game.machines.mineshaft.cost))}`;
				};
			};
			function levelUpDynamite() {
				if (Game.money >= Game.machines.dynamite.cost) {
					Game.money = Game.money-Game.machines.dynamite.cost;
					Game.machines.dynamite.level++;
					Game.machines.dynamite.ops = Game.machines.dynamite.ops + 300;
					Game.ops = Game.ops + 5000;
					Game.machines.dynamite.cost = Game.machines.dynamite.cost*1.5;
					document.getElementById("dynamiteLevel").innerHTML = `Dynamite level: ${Game.machines.mineshaft.level}`;
					document.getElementById("dynamiteOps").innerHTML = `Dynamite ore per second: ${Game.machines.mineshaft.ops}`;
					document.getElementById("dynamiteButton").innerHTML = `Upgrade dynamite ${cost(Math.ceil(Game.machines.dynamite.cost))}`;
				};
			};
			function getMoney() {
				return "$"+commas(Math.floor(Game.money));
			};
			function cost(number) {
				return "(cost: $"+commas(number)+")";
			};
			function toMoney(number) {
				return "$"+commas(number);
			};
			function upgradeOre() {
				if (Game.money >= Game.upgradeOreCost) {
					Game.money = Game.money-Game.upgradeOreCost;
					Game.oreLevel++;
				};
			};
			function commas(number) {
				return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			};
			var saveCounter = 0;
			var tick = setInterval(() => {
				Game.ore = Game.ore+(Game.ops/100);
				document.getElementById("ore").innerHTML = `ore: ${commas(Math.ceil(Game.ore))}<br><small>(per second: ${commas(Math.ceil(Game.ops))} | per click: ${commas(Math.ceil(Game.opc))})`+"</small>";
				document.getElementById("money").innerHTML = `money: ${getMoney()}`;
				
				if (Game.upgradeOpcCost > Game.money) {
					document.getElementById("opcButton").disabled = true;
				} else {
					document.getElementById("opcButton").disabled = false;
				};
				if (Game.machines.drill.cost > Game.money) {
					document.getElementById("drillButton").disabled = true;
				} else {
					document.getElementById("drillButton").disabled = false;
				};
				if (Game.machines.digger.cost > Game.money) {
					document.getElementById("diggerButton").disabled = true;
				} else {
					document.getElementById("diggerButton").disabled = false;
				};
				if (Game.machines.mineshaft.cost > Game.money) {
					document.getElementById("mineshaftButton").disabled = true;
				} else {
					document.getElementById("mineshaftButton").disabled = false;
				};
				if (Game.machines.dynamite.cost > Game.money) {
					document.getElementById("dynamiteButton").disabled = true;
				} else {
					document.getElementById("dynamiteButton").disabled = false;
				};
				if (Game.upgradeOreCost > Game.money) {
					document.getElementById("oreUpgraderButton").disabled = true;
				} else {
					document.getElementById("oreUpgraderButton").disabled = false;
				};
				
				
				if (Game.oreLevel == 2) {
					Game.upgradeOreCost = 1e+300;
					Game.oreValue = 3;
					document.getElementById("oreUpgraderIcon").src = "img/copper_ore.png";
					document.getElementById("oreUpgraderTitle").src = "img/copper_ore_title.png";
				};
				document.getElementById("oreUpgraderButton").innerHTML = `Upgrade ore ${cost(Game.upgradeOreCost)}`;
				document.getElementById("cashInButton").innerHTML = `Cash in ${commas(Math.ceil(Game.ore))} ore for ${toMoney(commas(Math.ceil(Game.ore*Game.oreValue)))}`;
				saveCounter++;
				if (saveCounter >= 6000) {
					save();
					saveCounter = 0;
				};
			}, 10);
			function cashInOre() {
				Game.money = Game.money+(Game.ore*Game.oreValue);
				Game.ore = 0;
			};
		</script>
	</head>
	<body>
		<div id="ore" class="gold">ore: 0<br>(per second: 0; per click: 1)</div><br>
		<div id="minerContainer" class="container">
			<button id="opcButton" title="current ore per click: 1" onclick="upgradeOpc()">double ore per click (cost: 100)</button><br><br>
			<button title="click to mine ore" id="miner" alt="the miner" onclick="mine();"></button>
				<div id="oreAnimation">+1</div>
			</img>
			<button id="cashInButton" onclick="cashInOre()">Cash in 0 ore for $0</button>
		</div>
		<div id="machines" class="container">
			<div class="machine">
				<img src="img/drill_icon.png" class="machineImage" alt="drill image">
				<button class="upgradeMachine" id="drillButton" onclick="levelUpDrill();">Upgrade drill (cost: $300)</button><br>
				<div id="drillLevel">Drill level: 0</div><br>
				<div id="drillOps">Drill ore per second: 0</div>
			</div>
			<div class="machine">
				<img src="img/digger_icon.png" class="machineImage" alt="digger image">
				<button class="upgradeMachine" id="diggerButton" onclick="levelUpDigger();">Upgrade digger (cost: $5000)</button><br>
				<div id="diggerLevel">Digger level: 0</div><br>
				<div id="diggerOps">Digger ore per second: 0</div>
			</div>
			<div class="machine">
				<img src="img/mineshaft_icon.png" class="machineImage" alt="mineshaft image">
				<button class="upgradeMachine" id="mineshaftButton" onclick="levelUpMineshaft();">Upgrade mineshaft (cost: $50,000)</button><br>
				<div id="mineshaftLevel">Mineshaft level: 0</div><br>
				<div id="mineshaftOps">Mineshaft ore per second: 0</div>
			</div>
			<div class="machine">
				<img src="img/dynamite_icon.png" class="machineImage" alt="dynamite image">
				<button class="upgradeMachine" id="dynamiteButton" onclick="levelUpDynamite();">Upgrade dynamite (cost: $150,000)</button><br>
				<div id="dynamiteLevel">Dynamite level: 0</div><br>
				<div id="dynamiteOps">Dymanite ore per second: 0</div>
			</div>
		</div>
		<div id="oreUpgrader" class="container">
			<img src="img/coal_ore.png" alt="ore image" id="oreUpgraderIcon">
			<img src="img/coal_ore_title.png" alt="ore title" id="oreUpgraderTitle">
			<button id="oreUpgraderButton" onclick="upgradeOre();">Upgrade ore (cost: $1,000,000)</button>
		</div>
		<div id="money" class="gold">money: $0<br></div>
		<div id="settings" class="container">
			<button onclick="wipeSave()">Wipe save</button><br>
			<button onclick="save()" style="width: 100%">Save</button>
			<!--<input type="checkbox" id="rightClickCheckbox">right click</input>-->
		</div>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<script>
			const places = {
				0: ["","un","duo","tre","quattuor","quin","sex","septen","octo","novem"],
				1: ["","deci","viginti","triginti","quadraginti","quinquaginti","sexaginti","septuaginti","octoginti","nonaginti"],
				2: ["","centi","ducenti","trecenti","quadringenti","quingenti","sescenti","septingenti","octingenti","nongenti"],
				3: ["","milli","dumilli","trimilli","quadrinmilli","quinmilli","sesmilli","septinmilli","octinmilli","nonmilli"]
			};
		
			var prefixNumber = 0;
			var outputType = "fred";
			var input = "tom";
			var shortenedNumber = "";
			function returnShortenedNumber(number) {
				shortenedNumber = "";
				for (let i = 0;i < number.toString().length;i++) {
					shortenedNumber = shortenedNumber+places[i][getPlaceValue(i,number)];
				};
				return shortenedNumber+"llion"
			};
			function getPlaceValue(place,number) {
				return Math.floor(number/Math.pow(10,place) % 10);
			};
			function shortenNumber() {
				document.getElementById("output").innerHTML = "overflow";
				if (outputType.value == "zeros") {
					shortenedNumber = returnShortenedNumber(Math.floor((input.valueAsNumber/3)-1));
					document.getElementById("output").innerHTML = `shortened number: ${shortenedNumber}<br>latin prefix number: ${Math.floor((input.valueAsNumber/3)-1)}<br>zeros: ${Math.floor(input.valueAsNumber)}`;
				} else if (outputType.value == "zeroGroups") {
					shortenedNumber = returnShortenedNumber(Math.floor(input.valueAsNumber-1));
					document.getElementById("output").innerHTML = `shortened number: ${shortenedNumber}<br>latin prefix number: ${Math.floor(input.valueAsNumber-1)}<br>zeros: ${Math.floor(input.valueAsNumber*3)}`; 
				} else if (outputType.value == "latinPrefix") {
					shortenedNumber = returnShortenedNumber(Math.floor(input.valueAsNumber));
					document.getElementById("output").innerHTML = `shortened number: ${shortenedNumber}<br>latin prefix number: ${Math.floor(input.valueAsNumber)}<br>zeros: ${Math.floor((input.valueAsNumber+1)*3)}`; 
				};
			};
			var interval = setInterval(function() {
				outputType = document.getElementById("outputType");
				input = document.getElementById("input");
				if (outputType.value == "zeros") {
					input.placeholder="ex. 93 => trigintillion";
					if (Math.floor(input.valueAsNumber) > 30002 || Math.floor(input.valueAsNumber) < 33) {
						input.style.backgroundColor = "darkorange";
					} else {
						input.style.backgroundColor = "white";
					};
				} else if (outputType.value == "zeroGroups") {
					input.placeholder="ex. 31 => trigintillion";
					if (Math.floor(input.valueAsNumber) > 10000 || Math.floor(input.valueAsNumber) < 11) {
						input.style.backgroundColor = "darkorange";
					} else {
						input.style.backgroundColor = "white";
					};
				} else if (outputType.value == "latinPrefix") {
					input.placeholder="ex. 30 => trigintillion";
					if (Math.floor(input.valueAsNumber) > 9999 || Math.floor(input.valueAsNumber) < 10) {
						input.style.backgroundColor = "darkorange";
					} else {
						input.style.backgroundColor = "white";
					};
				};
			}, 100);
		</script>
	</head>
	<body style="background-color:cornsilk">
		<h1>Number shortener</h1>
		<p>if the input turns red it means it will give a trash result<p>
		<hr>
		<label>Output from:</label>
		<select id="outputType">
			<option value="zeros">Zeros</option>
			<option value="zeroGroups">Zero groups</option>
			<option value="latinPrefix">Latin prefix number</option>
		</select>
		<input type="number" id="input" placeholder="ex. 6 => million" size="50">
		<button type="button" onclick="shortenNumber();">Shorten number</button>
		<br>
		<b id="output"></b>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			#player {
				position: absolute;
				bottom: 0;
				left: 0;
				width: 100px;
				height: 100px;
				background-color: gold;
				border: 5px outset orange
			}
		</style>
		<script>
			var x = 0;
			var y = 0;
			document.onkeypress = function (e) {
				e = e || window.event;
				if (e.keyCode == 119) { // w
					y = y + 10;
				} else if (e.keyCode == 97) { // a
					x = x - 10;
				} else if (e.keyCode == 115) { // s
					y = y - 10;
				} else if (e.keyCode == 100) { //d
					x = x + 10;
				};
				document.getElementById("player").style.bottom = y+"px";
				document.getElementById("player").style.left = x+"px";
			};
		</script>
	</head>
	<body>
		<div id="player"></div>
	</body>
</html> 
<!DOCTYPE html>
<html>
	<head>
		<style>
			textarea {
				width: 49%;
				height: 400px;
			}
			input {
				width: 100px;
			}
			.generate {
				width: 50%
			}
			body {
				background-color: cornsilk;
			}
		</style>
		<script>
			function choose(arr) {
				return arr[Math.floor(Math.random()*arr.length)];
			};
			function randomProperty(obj) {
				var keys = Object.keys(obj);
				return obj[keys[ keys.length * Math.random() << 0]];
			};
			var filtered = new Array();
			var storyLength = 100;
			var words = new Object();
			var input = new String();
			var output = new String();
			var currentWord = new String();
			var wordToAdd = new String();
			function getAfterOf(word) {
				return choose(words[word].after);
			};
			function generate() {
				words = {};
				input = document.getElementById("input").value;
				input = input.split(" ");
				for (let i = 0; i < input.length; i++) {
					if (typeof words[input[i]] !== 'undefined') {
						if (typeof input[i+1] !== 'undefined') {
							words[input[i]].after.push(input[i+1]);
						};
					} else {
						words[input[i]] = new Object();
						words[input[i]].word = input[i];
						if (typeof input[i+1] == undefined) {
							words[input[i]].after = [];
						} else {
							words[input[i]].after = [input[i+1]];
						};
					};
				};
				output = randomProperty(words).word;
				currentWord = output;
				for (let i = 0; i < document.getElementById("storyLength").value-1; i++) {
					wordToAdd = getAfterOf(currentWord);
					output = output+" "+wordToAdd;
					currentWord = wordToAdd;
				};
				document.getElementById("output").innerText = output;
			};
			function loadFile(filename) {
				fetch(filename).then((resp) => resp.text()).then(function(data) {
					document.getElementById("input").innerHTML = data;
				});
			};
		</script>
	</head>
	<body>
		<h1>Story lengthener</h1>
		<p>type stuff in the box to generate or do the button. you need to have the first word at the end for it to work.</p> 
		<hr>
		<label>Datasets:</label>
		<button onclick="loadFile('https://giantbooley.github.io/story-lengthener/datasets/bob.txt')">Bob</button>
		<button onclick="loadFile('https://giantbooley.github.io/story-lengthener/datasets/do_now.txt')">Do now</button>
		<hr>
		<textarea id="input"  onkeyup="generate();" placeholder="type stuff"></textarea>
		<textarea id="output" readonly></textarea>
		<label for="storyLength">Story length (words):</label>
		<input type="number" id="storyLength" value=100>
		<button onclick="generate();" class="generate">Generate</button>
	</body>
</html> <!DOCTYPE html>
<html>
	<title>Tools</title>
	<head>
		<style>
body {
  background-color: #FFF8DC;
  color: black;
}

.dark-mode {
  background-color: #000723;
  color: white;
}
		</style>
		<script>
			var darkMode = false;
			function toggleDarkMode() {
				if (darkMode == true) {
					document.body.style.backgroundColor="cornsilk";
					document.body.style.color="black";
					darkMode=false;
				} else {
					document.body.style.backgroundColor="#000723";
					document.body.style.color="white";
					darkMode=true;
				};
			};
			var centered = false;
			function toggleCentered() {
				if (centered == true) {
					document.body.style.textAlign="";
					centered=false;
				} else {
					document.body.style.textAlign="center";
					centered=true;
				};
			};
			function getRandomInt(min, max) {
				min = Math.ceil(min);
				max = Math.floor(max)+1;
				return Math.floor(Math.random() * (max - min) + min);
			};
			function arrayRandom(itdotlength) {
				return getRandomInt(0,itdotlength-1);
			};
			// eightBall
			const eightBallResponses = ["It is certain.","It is decidedly so.","Without a doubt.","Yes definitely.","You may rely on it.","As i see it, yes.","Most likely.","Outlook good.","Yes.","Signs point to yes.","Reply hazy, try again.","Ask again later.","Better not tell you now.","Cannot predict now.","Concentrate and ask again.","Don\'t count on it.","My reply is no.","My sources say no.","Outlook not so good.","Very doubtful."];
			function eightBallButtonClick() {
				// if ( document.getElementById("eightBallInput").textLength > 0) {
					document.getElementById("eightBallOutput").innerHTML=eightBallResponses[getRandomInt(0,eightBallResponses.length-1)];
				// };
			};
			// eightBall
			
			// dice
			function diceRoll() {
				document.getElementById("diceOutput").innerHTML=getRandomInt(1,document.getElementById("diceSides").value);
			};
			// dice
			
			// coin
			const coinFlipTypes = ["heads","tails"];
			function coinFlip() {
				document.getElementById("coinOutput").innerHTML=coinFlipTypes[Math.round(Math.random())];
			};
			// coin
			
			// rng
			function rngGenerate() {
				if (document.getElementById("rngInput2").valueAsNumber > document.getElementById("rngInput1").valueAsNumber) {
					document.getElementById("rngOutput").innerHTML=getRandomInt(document.getElementById("rngInput1").valueAsNumber,document.getElementById("rngInput2").valueAsNumber)
				} else {
					document.getElementById("rngOutput").innerHTML="Error";
				};
			};
			// rng
			
			// dreidel
			const dreidelSpinTypes = ["Nun","Shin","Hay","Gimel"];
			function dreidelSpin() {
				document.getElementById("dreidelOutput").innerHTML=dreidelSpinTypes[getRandomInt(0,3)];
			};
			// dreidel
			
			// plantgen
			const plantGenPrefixes = ["brain","wrinkle","crunch","puff","slime","tangle","crumble","moist","squish","spore"];
			const plantGenSuffixes = ["bulb","shroom","stalk","vine","weed","berry","fungus","puff","gill"];
			function plantGenGenerate() {
				document.getElementById("plantGenOutput").innerHTML=plantGenPrefixes[getRandomInt(0,plantGenPrefixes.length-1)]+plantGenSuffixes[getRandomInt(0,plantGenSuffixes.length-1)];
			};
			// plantgen
			
			// storygen
			
			var storyGenStoryNames = ["bob","tom","fred","mike","jim","joe","jeff","jack","john","ted"];
			var storyGenStoryActions = ["looked at","punched","outsmarted","bewildered","hollered at","squished the brain of"];
			var storyGenStoryFeelings = ["enraged","cross","mad","nice","happy"];
			// var storyGenStory = [""];
			function storyGenGenerate() {
				document.getElementById("storyGenOutput").style.display="block";
				document.getElementById("storyGenOutput").value = `${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} ${storyGenStoryActions[arrayRandom(storyGenStoryActions.length)]} ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} and ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} got ${storyGenStoryFeelings[arrayRandom(storyGenStoryFeelings.length)]} at ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} because ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} got ${storyGenStoryActions[arrayRandom(storyGenStoryActions.length)]}. ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} thought that ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} got ${storyGenStoryActions[arrayRandom(storyGenStoryActions.length)]} by ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]}, but ${storyGenStoryNames[arrayRandom(storyGenStoryNames.length)]} thought otherwise.`;
			};
			// storygen
			
			// multiplier
			var multiplierNumber = 1;
			var multiplierInfinity = false;
			var multiplierInfinityDigits = 8.98846567431158;
			var multiplierInfinityZeros = 307;
			function multiplierReset() {
				multiplierNumber=1;
				multiplierInfinity = false;
				multiplierInfinityDigits = 8.98846567431158;
				multiplierInfinityZeros = 307;
				document.getElementById("multiplierOutput").innerHTML=multiplierNumber;
			};
			function multiplierMultiply() {
				if (multiplierNumber.toString() == "8.98846567431158e+307") {
					multiplierInfinity = true;
				};
				if (multiplierInfinity == true) {
					multiplierInfinityDigits = multiplierInfinityDigits*2;
					if (multiplierInfinityDigits >= 10) {
						multiplierInfinityDigits = multiplierInfinityDigits-10;
						multiplierInfinityZeros++;
					};
					multiplierNumber=`${multiplierInfinityDigits}e+${multiplierInfinityZeros}`;
				} else {
					multiplierNumber=multiplierNumber*2;
				};
				document.getElementById("multiplierOutput").innerHTML=multiplierNumber;
			};
			// multiplier
		</script>
	</head>
	<body>
		<h1>Tools</h1>
		<hr>
		<label>Settings:</label>
		<button type="button" onclick="toggleDarkMode();">Toggle dark mode</button>
		<label>|</label>
		<button type="button" onclick="toggleCentered();">Toggle centered</button>
		<hr>
		<div id="eightBall">
			<h2>Magic 8 ball</h2>
			<input type="text" id="eightBallInput">
			<button type="button" onclick="eightBallButtonClick()">Shake magic 8 ball</button>
			<b id="eightBallOutput"></b>
		</div>
		<hr>
		<div id="dice">
			<h2>Roll a die</h2>
			<label for="diceSides">Select amount of sides:</label>
			<select id="diceSides">
				<option value=6>6 (hexahedron)</option>
				<option value=7>7 (heptahedron)</option>
				<option value=8>8 (octahedron)</option>
				<option value=9>9 (enneahedron)</option>
				<option value=10>10 (decahedron)</option>
				<option value=11>11 (hendecahedron)</option>
				<option value=12>12 (dodecahedron)</option>
				<option value=13>13</option>
				<option value=14>14</option>
				<option value=15>15</option>
				<option value=16>16</option>
				<option value=17>17</option>
				<option value=18>18</option>
				<option value=19>19</option>
				<option value=20>20</option>
				<option value=21>21</option>
				<option value=22>22</option>
				<option value=23>23</option>
				<option value=24>24</option>
				<option value=25>25</option>
				<option value=26>26</option>
				<option value=27>27</option>
				<option value=28>28</option>
				<option value=29>29</option>
				<option value=30>30</option>
				<option value=31>31</option>
				<option value=32>32</option>
				<option value=33>33</option>
				<option value=34>34</option>
				<option value=35>35</option>
				<option value=36>36</option>
				<option value=37>37</option>
				<option value=38>38</option>
				<option value=39>39</option>
				<option value=40>40</option>
				<option value=41>41</option>
				<option value=42>42</option>
				<option value=43>43</option>
				<option value=44>44</option>
				<option value=45>45</option>
				<option value=46>46</option>
				<option value=47>47</option>
				<option value=48>48</option>
				<option value=49>49</option>
				<option value=50>50</option>
			</select>
			<button type="button" onclick="diceRoll();">Roll die</button>
			<b id="diceOutput"></b>
		</div>
		<hr>
		<div id="coin">
			<h2>Flip a coin</h2>
			<button type="button" onclick="coinFlip();">Flip coin</button>
			<b id="coinOutput"></b>
		</div>
		<hr>
		<div id="rng">
			<h2>Random number generator</h2>
			<label>min:</label>
			<input type="number" id="rngInput1">
			<label>max:</label>
			<input type="number" id="rngInput2">
			<button type="button" onclick="rngGenerate();">Generate number</button>
			<b id="rngOutput"></b>
		</div>
		<hr>
		<div id="dreidel">
			<h2>Spin a dreidel</h2>
			<button type="button" onclick="dreidelSpin();">Spin dreidel</button>
			<b id="dreidelOutput"></b>
		</div>
		<hr>
		<div id="plantGen">
			<h2>Plant generator</h2>
			<button type="button" onclick="plantGenGenerate();">Generate</button>
			<b id="plantGenOutput"></b>
		</div>
		<hr>
		<div id="storyGen">
			<h2>Story generator</h2>
			<button type="button" onclick="storyGenGenerate();">Generate</button><br>
			<textarea readonly style="resize:none;display:none;" id="storyGenOutput" rows="15" cols="75"></textarea>
		</div>
		<hr>
		<div id="multiplier">
			<h2>Multiplier</h2>
			<button type="button" onclick="multiplierReset();">Reset</button>
			<button type="button" onclick="multiplierMultiply();">Multiply</button>
			<b id="multiplierOutput">1</b>
		</div>
		<hr>
	</body>
</html> 
<!DOCTYPE html>
<html>
	<head>
		<script>
			var letter = 1;
			function backspace() {
				let str = document.getElementById("input").value;
				if (str.length > 0) {
					document.getElementById("input").value = str.slice(1);
					letter = letter-1;
				};
			};
			function addLetter(letter) {
				document.getElementById("input").value=letter.toString()+document.getElementById("input").value;
				letter = letter+1;
			};
			var interval = setInterval(function() {
				document.getElementById("output").value=document.getElementById("input").value;
			}, 100);
		</script>
		<style>
			@font-face { font-family: Sevensegment; src: url('https://giantbooley.github.io/upside-down-calculator/SEVENSEGMENT.TTF'); }
			.display {
				font-family: Sevensegment;
				font-size: 100px;
				background-color: burlywood;
				resize: none;
			}
			.rotated {
				transform: rotate(180deg);
				text-align: right;
			}
			.key {
				cursor: pointer;
				background-color: black;
				color: white;
				border: 4px solid gray;
				padding: 16px 16px;
				font-family: monospace;
				display: inline-block;
			}
			.gray {
				cursor: not-allowed;
				opacity:0.2;
			}
		</style>
	</head>
	<body style="background-color:cornsilk">
		<h1>Upside down calculator generator</h1><hr>
		<textarea rows="1" cols="25" class="display" id="input">07734</textarea><br>
		<textarea rows="1" cols="25" class="display rotated" id="output">07734</textarea><br>
		<button class="key gray" onclick="addLetter('');" >q</button>
		<button class="key gray" onclick="addLetter('');" >w</button>
		<button class="key" onclick="addLetter('3');">e</button>
		<button class="key gray" onclick="addLetter('');" >r</button>
		<button class="key gray" onclick="addLetter('');" >t</button>
		<button class="key gray" onclick="addLetter('');" >y</button>
		<button class="key gray" onclick="addLetter('');" >u</button>
		<button class="key" onclick="addLetter('1');">i</button>
		<button class="key" onclick="addLetter('0');">o</button>
		<button class="key gray" onclick="addLetter('');" >p</button>
		<button class="key" onclick="backspace();">backspace</button>
		<br>
		<button class="key gray" onclick="addLetter('');">a</button>
		<button class="key" onclick="addLetter('5');">s</button>
		<button class="key" onclick="addLetter('0');">d</button>
		<button class="key gray" onclick="addLetter('');" >f</button>
		<button class="key" onclick="addLetter('6');">g</button>
		<button class="key" onclick="addLetter('4');">h</button>
		<button class="key gray" onclick="addLetter('');" >j</button>
		<button class="key gray" onclick="addLetter('');" >k</button>
		<button class="key" onclick="addLetter('7');">l</button>
		<br>
		<button class="key gray" onclick="addLetter('');" >z</button>
		<button class="key gray" onclick="addLetter('');" >x</button>
		<button class="key gray" onclick="addLetter('');" >c</button>
		<button class="key gray" onclick="addLetter('');" >v</button>
		<button class="key" onclick="addLetter('8');">b</button>
		<button class="key gray" onclick="addLetter('');" >n</button>
		<button class="key gray" onclick="addLetter('');" >m</button>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<script>
			var input = document.getElementById("input");
			var output = document.getElementById("output");
			function encode() {
				document.getElementById("output").value = encodeURI(document.getElementById("input").value);
			};
			function decode() {
				document.getElementById("output").value = decodeURI(document.getElementById("input").value);
			};
			function outputToInput() {
				document.getElementById("input").value = document.getElementById("output").value;
			}
		</script>
	</head>
	<body style="background-color:cornsilk">
		<h1>URL encoder and decoder</h1><hr>
		<textarea style="resize:none" id="input" rows="15" cols="50"></textarea>
		<button type="button" onclick="encode();">Encode</button>
		<button type="button" onclick="decode();">Decode</button>
		<button type="button" onclick="outputToInput();">Output to input</button>
		<textarea style="resize:none" readonly id="output" rows="15" cols="50"></textarea>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			iframe {
				border: none;
				display: block;
				margin: 0;
				padding: 0;
				outline: none;
			}
			input {
				width:500px;
			}
		</style>
		<script>
			function unblok() {
				document.getElementById("bod").style.display="none";
				document.body.style.backgroundColor="";
				document.getElementById("embed").src=document.getElementById("input").value;
				document.getElementById("embed").style.display="block";
			};
		</script>
	</head>
	<body style="background-color:cornsilk">
		<div id="bod">
			<h1>Website embedder</h1>
			<hr>
			<label for="input">website to embed:</label>
			<input id="input" type="text" width="100%"><br>
			<button onclick="unblok();">embed</button>
		</div>
		<iframe style="display:none" width="100%" height="620" id="embed" src=""></iframe>
	</body>
</html> <!DOCTYPE html>
<html>
	<head>
		<style>
			a {
				border: 3px outset gray;
				background-color: gray;
				color: white;
				text-decoration: none;
			}
			a:hover {
				color: cyan;
				border-style: inset;
			}
		</style>
	</head>
	<body style="background-color:cornsilk">
		<h1>GiantBooley's website</h1>
		<p>friends github: <a href=https://WyattNewman.github.io/>wyattnewman.github.io (this is my website)</a></p>
	<hr>
	<div id="stuff">
		<h2>Random stuff</h2><br>
		<a href="fake-terminal">Fake terminal</a><br>
		<a href="fake-hack-decimal">Fake hack decimal</a><br>
		<a href="fake-hack-binary">Fake hack binary</a><br>
		<a href="bookmarklets">Bookmarklets</a><br>
		<a href="fake-hack-code">Fake code hack</a><br>
		<a href="click-the-button">Click the button</a><br>
		<a href="mining-simulator">Mining simulator</a><br>
	</div>
	<hr>
	<div id="tools">
		<h2>Tools stuff</h2><br>
		<a href="tools">Other tools</a><br>
		<a href="url-encode-decode">URL encoder and decoder</a><br>
		<a href="number-shortener">Number shortener</a><br>
		<a href="javascript-tester">Javascript tester</a><br>
		<a href="upside-down-calculator">Upside down calculator generator</a><br>
		<a href="file-downloader">File downloader</a><br>
		<a href="html-viewer">HTML viewer</a><br>
		<a href="website-embedder">Website embedder</a><br>
		<a href="discord-text-emoji-generator">Discord text emoji generator</a><br>
		<a href="story-lengthener">Story lengthener</a><br>
	</div>
	<hr>
	<div id="unblocked">
		<h2>Unblocked stuff</h2><br>
		<a href="unbloked/y8/www.y8.com/games/slope.html">slope unblocked</a><br>
		<a href="unbloked/y8/www.y8.com/games/subway_surfers_world_tour_houston.html">subway surfers unblocked</a><br>
	</div>
	<hr>
	<div id="brokenStuff" style="opacity: 0.5;">
		<h2>Broken stuff</h2><br>
		<a href="nvidia-gaugan/gaugan.org/gaugan2">nvidia gaugan</a><br>
	</div>
	<hr>
	</body>
</html> <!DOCTYPE
